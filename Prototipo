// VIEW

public void MostraMenu()
{
    // Mostra menu com as diferentes opções disponíveis
    // Instancia delegados
    GetRelatorio RankedRelatorio = new GetRelatorio(RankedRelatorio);
    GetRelatorio RelatorioRecente = new GetRelatorio(RelatorioRecente);

    // Lógica para aguardar por inputs do utilizador
    // Utiliza MostraDados(List<PostInfo>) para mostrar os dados pedidos pelo utilizador

}

public void MostraDados(List<PostInfo> Report)
{
    // Apresenta dados
}

public void MostraErro()
{
    // Apresenta mensagem de erro
}


// CONTROLLER

public class PostInfo
{
    // atributos do PostInfo
    // métodos do PostInfo
}

delegate List<PostInfo> GetRelatorio();

public List<PostInfo> RankedRelatorio()
{
    // Pede ao model uma lista de informações de todos os Posts,
    // transforma essa lista numa lista de Posts
    // ordena-os, segundo um critério definido
    // e apresenta-os com a função MostraDados(List<Post> Report)
    PostData = model.GetPostData();
    return OrdenaDados(TransformaDados(PostData));
}

public List<PostInfo> RelatorioRecente()
{
    // Pede ao model uma lista de informações dos Posts mais recentes
    // segundo um critério de datas definido
    // e apresenta-os com a função MostraDados(List<Post Report>)
    return TransformaDados(model.GetLastPostData());
}

public List<PostInfo> TransformaDados(List<PostData> PostData)
{
    // Transforma a lista de objetos <PostData> do model
    // numa lista de <Post> para evitar dependencias entre
    // view e model
}

public List<PostInfo> OrdenaDados(List <PostInfo> PostInfo)
{
    // Ordena os dados do Post
}


// Model

public class PostData
{
    // atributos do PostData
    // métodos do postData
}

public List<PostData> GetPostData()
{
    // Invoca a API do facebook e pede dados de Posts
    // Devolve uma lista de dados de Posts
    // Esta função poderá ser um método da classe Post
}

public List<PostData> GetLastPostData()
{
    // Invoca a API do facebook e pede dados de Posts
    // Devolve uma lista de dados dos ultimos Posts
    // Esta função poderá ser um método da classe Post
}
